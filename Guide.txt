# Setup Guide for NVIDIA CUDA Documentation Question Answering System

# Prerequisites
# Python Installation: Ensure Python 3.x is installed on your system.

# Dependencies: Install the necessary Python libraries using pip.
pip install transformers torch chromadb streamlit beautifulsoup4 requests

# Hardware Requirements:
# Due to hardware limitations, ChromaDB is used instead of Milvus for storing and retrieving data.
# Ensure your system meets the minimum requirements for running intensive NLP tasks and database operations effectively.

# Steps to Setup and Run

# 1. Web Crawling
# File: WebCrawler.py
# Function: Extracts plain text content from the NVIDIA CUDA documentation website
# and saves it along with URLs into a JSON file.

# Instructions:
# Open WebCrawler.py in your preferred Python environment (IDE or terminal).
# Adjust parameters (base_url, max_depth, max_pages) in the script to control the depth of crawling
# and number of pages to fetch.

# Execute the script to initiate web crawling and data extraction:
python WebCrawler.py

# The output will be saved as data.json.

# 2. ChromaDB Initialization and Data Insertion
# File: ChromaDB.py
# Function: Initializes ChromaDB, creates a collection, and inserts segmented text data
# along with metadata (URLs).

# Instructions:
# Open ChromaDB.py in your Python environment.
# Ensure you have installed the necessary dependencies (chromadb).

# Run the script to initialize ChromaDB and store data:
python ChromaDB.py

# Adjust the collection name and other settings within the script as needed.

# 3. Question Answering Interface
# File: Robeata.py
# Function: Implements a Streamlit-based application for interacting with users,
# querying ChromaDB, and providing answers using a pre-trained RoBERTa model.

# Instructions:
# Open a terminal or command prompt.
# Navigate to the directory containing Robeata.py.

# Launch the Streamlit application by running:
streamlit run Robeata.py

# Access the application interface in your web browser.
# Enter questions about the NVIDIA CUDA documentation to receive answers generated by the RoBERTa model.

# 4. Interactive Data Processing and QA
# File: Interactive.ipynb
# Function: Jupyter Notebook for interactive data chunking, ChromaDB interaction,
# and question answering using the RoBERTa model.

# Instructions:
# Open Interactive.ipynb in Jupyter Notebook.
# Execute each cell sequentially to perform interactive data processing tasks:
# - Chunk input data.
# - Store chunks in ChromaDB.
# - Query ChromaDB and retrieve answers using the integrated RoBERTa model.

# Additional Notes
# Customization: Modify parameters, collection settings, and input data formats based on specific project requirements.
# Hardware Considerations: Ensure your system has adequate resources to handle the computational demands of NLP tasks and database operations.
# Troubleshooting: Check console outputs and logs for any errors or warnings during setup and execution.
